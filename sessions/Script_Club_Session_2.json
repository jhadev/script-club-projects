{
  "title": "Script Club - Session 2",
  "description": "Conditionals, Loops, Break/Continue statements, Trythy/Falsy values",
  "head": "<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />",
  "htmlAttrs": "lang=\"en\" class=\"\"",
  "tags": [
    ""
  ],
  "autoupdate": true,
  "autosave": false,
  "autotest": false,
  "delay": 1500,
  "formatOnsave": false,
  "view": "split",
  "mode": "full",
  "theme": "dark",
  "themeColor": "hsl(220, 20%, 50%)",
  "layout": "responsive",
  "editorTheme": "",
  "recoverUnsaved": true,
  "showSpacing": false,
  "welcome": true,
  "readonly": false,
  "allowLangChange": true,
  "activeEditor": "script",
  "languages": [
    "javascript",
    "typescript"
  ],
  "markup": {
    "language": "html",
    "content": ""
  },
  "style": {
    "language": "css",
    "content": ""
  },
  "script": {
    "language": "javascript",
    "content": "// Session 2: Control Structures and Flow\n// Objective: Master control flow with conditionals, loops, truthy/falsy values, and the ternary operator.\n\n// 1. Conditional Statements: if, else if, else, switch and the ternary operator\n\n// Conditionals execute code based on boolean conditions.\n// Use ES6 'let' for block-scoped variables.\n// let userAge = 20;\n// if (userAge >= 18) {\n//   console.log(\"User is an adult.\");\n// } else {\n//   console.log(\"User is a minor.\");\n// }\n\n// Multi-condition example for grading\n// let score = 85;\n// if (score >= 90) {\n//   console.log(\"Grade: A\");\n// } else if (score >= 80) {\n//   console.log(\"Grade: B\");\n// } else if (score >= 70) {\n//   console.log(\"Grade: C\");\n// } else {\n//   console.log(\"Grade: F\");\n// }\n\n// Switch Statement\n// Switch handles multiple discrete values efficiently.\n// let role = \"admin\";\n// switch (role) {\n//   case \"admin\":\n//     console.log(\"Has admin access.\");\n//     break;\n//   case \"user\":\n//     console.log(\"Has user access.\");\n//     break;\n//   default:\n//     console.log(\"No access.\");\n// }\n\n// Ternary Operator\n// Concise if-else alternative: condition ? valueIfTrue : valueIfFalse\n// let isActive = true;\n// let status = isActive ? \"User is active\" : \"User is inactive\";\n// console.log(status);\n\n// Nested ternary for access levels (use with care)\n// let age = 16;\n// let access = age >= 18 ? \"Full access\" : age >= 13 ? \"Limited access\" : \"No access\";\n// console.log(\"Access level:\", access); \n\n// -----------------------------------------------------------------------------------------------------\n\n// 2. Truthy and Falsy Values\n// Falsy: false, 0, \"\", null, undefined, NaN\n// Truthy: All other values\n// let input = 0;\n// console.log(\"Is input truthy?\", input ? \"Truthy\" : \"Falsy\");\n\n// Borrowing from an above example\n// isActive = 'false';\n// status = isActive ? \"User is active\" : \"User is inactive\";\n// console.log(status);\n\n// Arrow function to check truthiness\n// const checkTruthy = (val) => val ? \"Truthy\" : \"Falsy\";\n// console.log(\"Non-empty string:\", checkTruthy(\"Akamai\"));\n\n// -----------------------------------------------------------------------------------------------------\n\n// 3. Loops\n// Loops repeat code based on conditions.\n\n// Basic for loop\n// for (let i = 1; i <= 5; i++) {\n//   console.log(\"For loop iteration:\", i);\n// }\n\n// Complex for loop: Sum of squares\n// let sumOfSquares = 0;\n// for (let i = 1; i <= 4; i++) {\n//   sumOfSquares += i ** 2; // Square each number and add to sum\n//   console.log(`Adding ${i}^2 = ${i ** 2}, Current sum: ${sumOfSquares}`);\n// }\n// console.log(\"Final sum of squares:\", sumOfSquares);\n\n// While loop: Find first power of 2 exceeding 100\n// let power = 1;\n// let exponent = 0;\n// while (power <= 100) {\n//   power *= 2;\n//   exponent++;\n// }\n// console.log(`First power of 2 > 100 is 2^${exponent} = ${power}`);\n\n// Do-while: Simulate retrying a task\n// let attempts = 0;\n// do {\n//   attempts++;\n//   console.log(`Attempt ${attempts}`);\n// } while (attempts < 2 && Math.random() > 0.5); // Random condition for demo\n\n// Bonus: Math.random() is what's called a static method part of standard built-in objects. \n// There are many of these, https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n\n// For...in Loop\n// Iterates over enumerable properties of an object (keys).\n// Use with objects, not arrays (less common for arrays in ES6).\n// let user = {\n//   name: \"Akamai Learner\",\n//   age: 25,\n//   role: \"developer\"\n// };\n// for (let key in user) {\n//   console.log(`Property: ${key}, Value: ${user[key]}`); \n// }\n\n// For...in with array (not recommended, but shown for clarity)\n// Not recommended because it includes inherited properties from the array's prototype. It includes non-integer\n// properties. Also the order of the properties in the array are not guaranteed to match the index order.\n// Finally the indexes are strings, not numbers. Generally should use for loop, for...of or forEach() on arrays.\n// let fruits = [\"apple\", \"banana\", \"orange\"];\n// for (let index in fruits) {\n//   console.log(`Index: ${index}, Fruit: ${fruits[index]}`); \n// }\n\n// For...of Loop\n// Iterates over iterable values (e.g., arrays, strings), not object properties.\n// Preferred for arrays in modern JavaScript.\n// let scores = [85, 90, 95];\n// let total = 0;\n// for (let score of scores) {\n//   total += score;\n//   console.log(`Adding score: ${score}, Running total: ${total}`);\n// }\n// console.log(\"Average score:\", total / scores.length);\n\n// For...of with a string\n// let message = \"Edge\";\n// for (let char of message) {\n//   console.log(\"Character:\", char); \n// }\n\n// -----------------------------------------------------------------------------------------------------\n\n// 4. Break and Continue\n// Break exits loops; continue skips iterations.\n// for (let i = 1; i <= 5; i++) {\n//   if (i === 4) {\n//     console.log(\"Breaking at i =\", i);\n//     break; // Exit at 4\n//   }\n//   console.log(\"Number:\", i);\n// }\n\n// Who can tell me what % is doing here?\n// for (let i = 1; i <= 5; i++) {\n//   if (i % 2 === 0) {\n//     continue; // Skip even numbers\n//   }\n//   console.log(\"Odd number:\", i);\n// }"
  },
  "stylesheets": [],
  "scripts": [],
  "cssPreset": "",
  "imports": {},
  "types": {},
  "tests": {
    "language": "typescript",
    "content": ""
  },
  "tools": {
    "enabled": "all",
    "active": "console",
    "status": "full"
  },
  "zoom": 1,
  "processors": [],
  "customSettings": {},
  "editor": "monaco",
  "fontFamily": "Fira Code",
  "fontSize": 14,
  "useTabs": false,
  "tabSize": 2,
  "lineNumbers": true,
  "wordWrap": false,
  "closeBrackets": true,
  "foldRegions": false,
  "semicolons": true,
  "singleQuote": false,
  "trailingComma": true,
  "emmet": true,
  "enableAI": false,
  "version": "46"
}